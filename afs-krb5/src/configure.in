dnl Process this file with autoconf to produce a configure script.
AC_INIT(afs2k5db.c)
AC_REVISION([$Id: configure.in,v 1.11 1998/02/28 07:43:53 kenh Exp $])
dnl
dnl Allow the user to specify the compiler and/or linker
dnl
CUSTOM_CONFIG
dnl
dnl Get the prefix from the location of "kinit"
dnl
AC_PREFIX_PROGRAM(kinit)
dnl
dnl Check for the right install program
dnl
AC_PROG_INSTALL
dnl
dnl Try to find krb5 include and library files
dnl
AC_ARG_WITH(krb5, [  --with-krb5=PATH        Location of Kerberos 5 libraries and include files],
[	krb5lib=${withval}/lib
	krb5inc=${withval}/include
	INSTALL_BIN=${withval}/bin
	INSTALL_SBIN=${withval}/sbin],
[	krb5lib=${prefix}/lib
	krb5inc=${prefix}/include
	INSTALL_BIN=${prefix}/bin
	INSTALL_SBIN=${prefix}/sbin])
dnl
dnl Optional support for AFS
dnl
AC_ARG_WITH(afs,
[  --with-afs=AFSDIR       use preinstalled AFS library tree], ,with_afs=/usr/afsws)dnl
if test $with_afs != no; then
	AC_DEFINE(AFS)
	AFSLIBS="-L$with_afs/lib -L$with_afs/lib/afs -lsys -lprot -lubik -lauth -lrxkad -lrx -llwp -ldes -lsys $with_afs/lib/afs/util.a"
	CPPFLAGS="$CPPFLAGS -I$with_afs/include"
else
	echo "Cannot build without AFS tree"
	exit 1
fi
dnl
dnl Might need to specify location of source and build tree
dnl
AC_ARG_WITH(krb5-src,
[  --with-krb5-src=DIR     Location of Kerberos source tree],
[	EXTRA_INC="$EXTRA_INC -I$with_krb5_src/include -I$with_krb5_src/include/krb5"
	if test -r $with_krb5_src/lib/libdb.a ; then
		EXTRA_DB_LIB=$with_krb5_src/lib/libdb.a
	fi])
dnl
AC_ARG_WITH(krb5-obj,
[  --with-krb5-obj=DIR     Location of Kerberos build tree],
[	EXTRA_INC="$EXTRA_INC -I$with_krb5_obj/include -I$with_krb5_obj/include/krb5"
	EXTRA_DB_LIB=$with_krb5_obj/lib/libdb.a])
dnl
dnl Check to see if we need "netlibs" (specifically, libnsl and libsocket)
dnl
uname=`(uname) 2>/dev/null`
if test "$uname" != IRIX -a "$uname" != IRIX64 ; then
	AC_CHECK_LIB(socket, socket,
[	SYSLIBS="$SYSLIBS -lsocket"], ,-lnsl)
	AC_CHECK_LIB(nsl, t_bind,
[	SYSLIBS="$SYSLIBS -lnsl"])
fi
dnl
dnl See if we need a special library to handle regular expression stuff
dnl
save_LIBS="$LIBS"
LIBS=-lgen
AC_CHECK_FUNCS(compile step)
if test "$ac_cv_func_compile" = yes ; then
	REGEXP_LIB=-lgen
fi
LIBS="$save_LIBS"
dnl
dnl Sigh, we need to look for the 524 lib first since we can't specify it in the
dnl regular LIBS variable
dnl
AC_FIND_LIB(krb524, krb524_convert_princs, ${krb5lib} /usr/krb5/lib /usr/local/lib,
[	if test "$dir" = "yes"; then
		KRB524LIB="-lkrb524"
	else
		KRB524LIB="-L$dir -lkrb524"
	fi
],[
	echo "Cannot find 524 library, exiting"
	exit 1
], -lkrb5 -lcrypto -lcom_err $SYSLIBS)
dnl We're assuming that krb5, crypto, and com_err are in the same place,
dnl that's why we're not specifying search paths for them
dnl
AC_FIND_LIB(krb5, krb5_init_context, ${krb5lib} /usr/krb5/lib /usr/local/lib, , [
	echo "Cannot find Kerberos 5 libraries, exiting"
	exit 1
], -lcrypto -lcom_err $SYSLIBS)
AC_FIND_LIB(crypto, mit_des_cbc_encrypt, , ,[
	echo "Cannot find crypto library, exiting"
	exit 1
], -lcom_err $SYSLIBS)
AC_FIND_LIB(com_err, com_err, , ,[
	echo "Cannot find com_err library, exiting"
	exit 1
], $SYSLIBS)
dnl
dnl Check the system type to figure out which runtime-path flags we need
dnl to set
dnl
AC_CANONICAL_SYSTEM
changequote(<<, >>)dnl
case "$target" in
	*-sun-solaris*)
		LDPATH_FLAGS=`echo $LIBS | sed -e 's/-l[^ ]* *//g' -e 's/-L/-R/g'`
		if test $with_afs != no; then
			AFSLIBS="$AFSLIBS -lc -L/usr/ucblib -lucb -R/usr/ucblib"
		fi

		if test "$target" = "sparc-sun-solaris2.4" ; then
			# Solaris 2.4 needs libucb.a for bcopy() and friends.
			SYSLIBS="$SYSLIBS -L/usr/ucblib -lucb"
		fi
		;;
	*-hp-hpux*)
		LDPATH_FLAGS="-Wl,+b,:"
		if test $with_afs != no; then
			AFSLIBS="$AFSLIBS -lBSD"
		fi
		;;
	*-*-netbsd*)
		if test $with_afs != no; then
			AFSLIBS="$AFSLIBS -lcompat"
		fi
		;;
	*)
		LDPATH_FLAGS=
	;;
esac
changequote([, ])dnl
dnl
dnl Check for Kerberos 5 include files
dnl
AC_FIND_HEADER(krb5.h, $krb5inc /usr/krb5/include , ,
[
	echo "Cannot find Kerberos 5 include files, exiting"
	exit 1
])
dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(memory.h)
AC_CHECK_HEADERS(paths.h)
AC_CHECK_HEADERS(malloc.h)
dnl
dnl Check for functions
dnl
AC_CHECK_FUNCS(strerror)
dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIGNAL
AC_TYPE_PID_T
dnl Check for functions that we would need to replace
dnl output necessary symbols
AC_SUBST(CC)
AC_SUBST(LDPATH_FLAGS)
AC_SUBST(AFSLIBS)
AC_SUBST(SYSLIBS)
AC_SUBST(EXTRA_INC)
AC_SUBST(EXTRA_DB_LIB)
AC_SUBST(KRB524LIB)
AC_SUBST(REGEXP_LIB)
AC_SUBST(INSTALL_BIN)
AC_SUBST(INSTALL_SBIN)
AC_OUTPUT(Makefile)
